{
	"name":"Danny Chapman",
	"description":"Web designer and Open Government Fanboy Danny Chapman",
	"url":"http://dannychapman.com",
	"updated":"",
	"posts":[
	{
		"title":"Where’s the beta?",
		"id":"/2013/10/21/wheres-the-beta",
		"url":"http://dannychapman.com/2013/10/21/wheres-the-beta/",
		"description":"",
		"tags": "Beta, Design, Government",
		"categories":"current",
		"date": "2013-10-21 00:00:00 -0400",
		"content": "<p>Twitter wasn’t built in a day. The same can be said of Foursquare, Facebook or scores of other .com success stories. The inherent culture of most tech companies is built around the notion that fast, constant experimentation and iterative refinement makes for a good product. It is rather ironic then, given the way amendments rapidly changed our framing documents, that today government shuns the fast, iterative approach of Silicon Valley.</p><p>After the messy and often ugly process of creating legislation is completed, our government typically goes for the big reveal, the showy launch. This isn’t only a legislative issue, it’s often a policy, or cultural issue. To minimize risk, it is considered preferable to shy away from showing your cards until the thing you’ve built is <em>finished</em>. The thing is, like Facebook or Twitter, the work of government never has a finite end to it.</p><p>The rollout of Healthcare.gov has shown that government does a diservice when it hides the development process and pushes for the big launch at all costs. Notable exception — NASA does <a href='http://www.youtube.com/watch?v=FVzfDZlEwaU&amp;list=PL00C1D0FA06115964&amp;index=27'>big launches</a> rather well. Imagine if instead of a massive rollout, followed by the application of <em>just enough</em> duct tape and servers until the problems on the surface are patched just out of view, failure had actually been planned for, and even embraced as part of of the design, UX, and development process. In short, imagine if there had been a beta.healthcare.gov?</p><!--break--><p>Clay Johnson has pointed out the <a href='http://www.npr.org/blogs/alltechconsidered/2013/10/08/230424841/health-exchange-tech-problems-point-to-a-thornier-issue'>thorny issue of procurement</a> is at the root of government technology problems. Ben Balter of Github has chimed in on the <a href='http://www.npr.org/2013/10/17/235739367/if-a-tech-company-had-built-the-federal-health-care-website'>need for better transparency</a>.</p><p>Imagine if in addition to the use of better procurement and transparency, and iterative approach for design, user experience and software engineering had been used in successive waves of beta testing? If Google can leave GMail in beta for years, shouldn’t we expect the same for something as important as our healthcare?</p><p>This beta approach has ramifications in other forms of government, not just tech. For example, what if that big, costly new DMV branch down the road wasn’t swamped with people on day one, then promptly declared an instant failure, but instead was beta tested in the same way we build software? If nothing else, it would avoid the need for quick fixes and <a href='http://www.wpri.com/news/local/west-bay/cranston-gov-chafee-orders-new-leader-to-fix-dmv'>embarrassing press conferences</a>.</p><p>What if the rollout of new services was talked about in the open in much the same way <a href='http://digital.cabinetoffice.gov.uk/'>gov.uk does every week</a>? Simply having an open and honest blog, talking about the buildout of healthcare.gov would have done more than any PR campaign to fix a bad first impression. The Department of Health and Human Services has made a good start in this direction by <a href='http://www.hhs.gov/digitalstrategy/doing-better-making-improvements-healthcaregov.html'>finally talking about its failures</a> at launch with a good dose of humility. That said, much more could be gained from far larger cultural, policy and legislative changes needed to make sure this does not happen again.</p><p>Design, user experience and usability testing have a tremendous roll to play in government. Iterative experimentation combined with a gradual rollout and we could have had an <a href='http://www.nytimes.com/2013/10/13/us/politics/from-the-start-signs-of-trouble-at-health-portal.html?smid=tw-share'>entirely different story to tell than this one</a>. Next time, let’s pressure our leaders to give us the beta.</p>"
	},
	{
		"title":"Open Source Design",
		"id":"/2013/09/05/open-source-design",
		"url":"http://dannychapman.com/2013/09/05/open-source-design/",
		"description":"",
		"tags": "Open Source, Design, Government",
		"categories":"past",
		"date": "2013-09-05 00:00:00 -0400",
		"content": "<p>Democracies provide us with a very workable model for shared intellectual property. The concept of <em>We, the people</em> — a messy, chaotic process owned by all — is at the heart of the open source software movement. Much like the framers’ original intent for our constitution, open source software provides a framework to solve problems together that are hard to solve as individuals.</p><p>It’s not to say that Apple is wrong for making iTunes a closed piece of software, or <a href='http://www.ted.com/talks/clay_shirky_how_the_internet_will_one_day_transform_government.html'>Adobe is wrong for making Photoshop</a> the way that they do. It’s simply that there are many things we can successfully do together more efficiently. The technology underpinning this blog post, from HTML that delivers content and structure to the browser, CSS that provides the design, to the servers that deliver the whole package, are all the result of open source collaboration — all strengthened by people coming up with improvements and new ideas everyday.</p><p>Federal, state and local governments are realizing open source software development is a way to avoid getting stuck with proprietary code that can’t be reused, repurposed, or easily maintained long term. Moreover, since taxpayers collectively own what they pay for, contributing government technology as open source makes economic sense.</p><!--break--><p>For the most part, software developers have been having all the fun. For designers, the process becomes a quite a bit harder. The version control tools that enable such easy collaboration in the coding world have not been extended to the design community. There’s no GitHub plugin for Creative Suite for example, no easy way to merge design changes piece by piece. Make no mistake, I fully realize these are difficult problems to solve. Tracking the changes made to lines of code is a far simpler problem to solve than tracking the changes made to a visual design. But, I do think it’s a solvable problem. Tools like <a href='http://layervault.com'>layervault</a> provide a great first step, but there’s more to be done. What if individual versions could be assigned to layers? What if designers could the same ease as developers? What if the design process became more transparent as a result?</p><p>The bigger challenge is cultural. Designers typically work behind the magic curtain, only to reveal the finished product when absolutely ready. The process of designing is usually shrouded in a bit of mystery, seldom talked about with the client, or even with other coworkers. I’ll admit, the idea of someone else getting their hands on my best design work gives me pause. Do I really want to commit to someone else changing my work? What if their ideas are better? To lose a little bit of control over the process and the finished product — this is a far bigger challenge for designers to overcome.</p><p><a href='http://dribbble.com'>Dribbble</a> has been perhaps the strongest example of how this process can work effectively. Focused, smart sharing of work in progress — combined with a fun social environment — have made for an extremely vibrant online community. But, it doesn’t go the last mile, the part where we have tools to enable us to directly collaborate.</p><p>Here are a few small ways I’ve seen open source design work firsthand:</p><h4 id='alphadatagov'><a href='http://alpha.data.gov'>alpha.data.gov</a></h4><p>I was fortunate enough to collaborate on alpha.data.gov with fellow #PIF Ryan Panchadsaram last year, with the <a href='https://github.com/presidential-innovation-fellows/alpha-data-dot-gov/commits/master'>collaborative process out in the open for all to see on GitHub</a>. So far, seven people have contributed to the site design and content.</p><h4 id='nextdatagov'><a href='http://next.data.gov'>next.data.gov</a></h4><p>A sneak peak of what data.gov will eventually become, <a href='https://github.com/GSA/datagov-design/https://github.com/GSA/datagov-design/'>next.data.gov’s design is also open source.</a></p><h4 id='presidential_innovation_fellows_logo'><a href='https://github.com/presidential-innovation-fellows/PIF-logo-v2'>Presidential Innovation Fellows Logo</a></h4><p>I’ve added version 2 of this logo to GitHub, and already added some great improvements made by <a href='https://github.com/andrewliebchen'>Andrew Liebchen.</a></p><p>It doesn’t have to be limited to UI design either, as this great work from UX designer <a href='https://github.com/GSA/datagov-design/issues/36'>Ed Mullen clearly shows.</a></p><p>These are very small steps compared with the great deal of progress that’s been made by coders making government better. Clearly, we have some catching up to do, but the results could have no less impact. Given how much good design can change our relationship with government, opening the process to more people to make that process better only makes sense. While we’re at it, if someone wants to make a GitHub plugin for Creative Suite, I’d be your biggest fan.</p>"
	},
	{
		"title":"Makers of things and makers of Government",
		"id":"/2013/07/01/makers-of-things",
		"url":"http://dannychapman.com/2013/07/01/makers-of-things/",
		"description":"",
		"tags": "Open Source, Design, Government",
		"categories":"past",
		"date": "2013-07-01 00:00:00 -0400",
		"content": "<p>Make no mistake, there is good work to be done redesigning our online and in-person user experiences with government. The problem is, design cannot fundamentally change the experience we have with it. A better designed form is good, but it can&#8217;t change the questions on the form, or the number of times you have to line up in a government building. There are limits to how much improvement we can make if we don&#8217;t make structural changes to our lawmaking process and the government processes that result.</p><p>Typically, there is a significant divide between the process of creating laws and implementing them. Not only in the actual policy decisions at hand, but conceptually — how will the way this new rule is crafted affect the way we interact with it? Well-intentioned but badly designed legislation can and does have disastrous consequences.</p><p>Our highest volume interactions with government get the most scrutiny from this perspective, and rightly so. Voting and long lines at the DMV are among our favorite talking points. We complain, pressure collectively for improvement, and once successful, we walk away. In other less frequent or critical interactions with government, we usually <em>expect</em> a bad experience, then do little to change it. Often, we blame the government employee responsible for holding the hoops we have to jump through, rather than the people who created the hoops in the first place.</p><p>I don&#8217;t have a solution, I just want to pose a question: What would it be like if our legislative bodies were more balanced between lawyers and people who make things we interact with every day - designers, entrepreneurs and engineers? <a href='http://www.businessweek.com/articles/2013-01-10/the-113th-congress-by-the-numbers'>A fascinating chart published by Business Week</a> breaks down the 113th congress by profession. Some highlights:</p><ul><li><strong>173</strong> lawyers</li><li><strong>130</strong> businesspeople</li><li><strong>64</strong> career politicians and government employees</li></ul><p>All told, that&#8217;s 367 out of 535 voting members, or 69% of congress made of up of legislative pros, not by makers of things.</p><p>The question is a simple one: What if the lawmaking process was more reflective of us, and driven not just by societal and public policy outcomes, but by the user experience actual citizens have?</p>"
	},
	{
		"title":"Government and design are not mutually exclusive",
		"id":"/2013/06/10/government-design",
		"url":"http://dannychapman.com/2013/06/10/government-design/",
		"description":"",
		"tags": "Open Source, Design, Government",
		"categories":"past",
		"date": "2013-06-10 00:00:00 -0400",
		"content": "<p>As a designer working on government-related things for the past eight years, I’ve waded elbows deep into fixing government processes online. The difference between private sector and public sector engagement is large, but the gap is closing.</p><p>Last year, the White House released the <a href='http://www.whitehouse.gov/sites/default/files/omb/egov/digital-government/digital-government.html'>White House Digital Strategy</a> — a document that clearly identifies the critical role design will play in the interaction between citizens and their government. Responsive design, device-agnostic approaches, and a significant focus on mobile are all called out directly. Think about that for a second: responsive design in a government document. This year, the executive branch’s <a href='http://project-open-data.github.io/'>Open Data Policy</a> Open Data Policy was published not on government servers, but on GitHub. Not only that, one of the <a href='https://github.com/project-open-data/project-open-data.github.io/pull/13'>first commits</a>, or edits to this document was an improvement to my initial design. This is citizen to government collaboration, happening in a way that is transparent, open and available for everyone. Effectively, this is like turning on &#8220;track changes&#8221; for a living, government document. A design edit to a policy document may not represent wholesale change in our democracy, but it is a start.</p><p>The technology is no longer the challenge, as the tools we have at our disposal are many. <a href='http://git-scm.com/'>Git</a> and git hosting providers like <a href='http://www.github.com/'>GitHub</a> for <a href='http://www.ted.com/talks/clay_shirky_how_the_internet_will_one_day_transform_government.html'>decentralized collaboration</a>, HTML5 and CSS3 for accessible device-agnostic content, and smart phone adoption for bridging our broadband gap are just a small part of the tool chest.</p><p>The challenge is more fundamental — how do we as citizens engage, <a href='http://www.ted.com/talks/jennifer_pahlka_coding_a_better_government.html'>not just on election day</a>, but in the far less sexy process of governing? <a href='http://www.dobt.co/blog/'>Big, messy problems</a> are out there, but good design can, and will, provide a significant part of the solution. We just have to be willing to get our hands a little bit dirty.</p><p>This past Sunday, I was inspired to see a fantastic cross-section of citizens do just that at a <a href='https://twitter.com/search?q=%23hacknwk'>Hackathon in Newark, NJ</a>. While a hackathon is just a one-day event that can’t bring about fundamental change, it can spark something. The results might not be as finished or as polished as we’d like, in the end the code is not what is important. Hackathons can help fuel a cultural shift towards engagement, towards fixing our democratic institutions — and that is a much bigger deal than perfect code. If the citizens I saw rolling up their sleeves this past weekend are anything to go by, we are in for something good over the next few years.</p>"
	}
	]
}